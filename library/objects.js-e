func attributes {
	${{
		if (arguments.length != 1) {
			eden.error(new Error("attributes: This function requires exactly 1 argument."), "error");
			return undefined;
		}

		var obj = arguments[0];
		
		if (obj === undefined) {
			return undefined;
		} else if (obj === null) {
			eden.error(new Error("attributes: The argument must not be null."), "error");
			return undefined;
		} else if (typeof(obj) != "object") {
			eden.error(new Error("attributes: The  argument must be an object, not a " + typeof(obj)), "error");
			return undefined;
		}
		
		return Object.keys(obj);
	}}$;
}

func hasAttribute {
	${{
		if (arguments.length != 2) {
			eden.error(new Error("hasAttribute: This function requires exactly 2 arguments."), "error");
			return undefined;
		}
		
		var obj = arguments[0];
		var attributeName = arguments[1];
		
		if (obj === null) {
			eden.error(new Error("hasAttribute: The first argument must not be null."), "error");
			return false;
		} else if (typeof(obj) != "object") {
			eden.error(new Error("hasAttribute: The first argument must be an object, not a " + typeof(obj)), "error");
			return false;
		}

		if (typeof(attributeName) != "string") {
			eden.error(new Error("hasAttribute: The second argument must be a string, not a " + typeof(attributeName)), "error");
			return false;
		}
		
		return obj.hasOwnProperty(attributeName);
	}}$;
}
