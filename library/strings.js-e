##Functions that operate on strings.

func strcat {
	auto result, i;
	result = "";
	for (i = 1; i <= $#; i++) {
		if ($[i] == @) {
			return @;
		} else if (isString($[i])) {
			result = result // $[i];
		} else {
			error("strcat: Argument " // str(i) // " must be a list, not a " // type($[i]));
			return @;
		}
	}
	return result;
}

##The same issues arise as with the sublist function and they're handled in the
##same way.
func substr {
	${{
		if (arguments.length < 2 || arguments.length > 3) {
			eden.error(new Error("substr: this function requires a minimum of 2 arguments and a maximum of 3 arguments."), "error");
			return undefined;
		}
		
		var str = arguments[0];
		var from = arguments[1];
		var to = arguments[2];
		
		if (str === undefined) {
			return undefined;
		}
		if (typeof(str) != "string") {
			eden.error(new Error("substr: expected string but got " + typeof(str)), "error");
			return undefined;
		}
		if (from === undefined) {
			from = 1;
		} else if (from > to) {
			return "";
		}
		if (from > 0) {
			from = from - 1;
		} else if (from == 0) {
			eden.error(new Error("substr: from cannot be 0."), "error");
			return undefined;
		}
		if (to == 0) {
			eden.error(new Error("substr: to cannot be 0."), "error");		
		} else if (to < 0) {
			to = to + 1;
			if (to == 0) {
				to = str.length;
			}
		}
		
		var result = str.slice(from, to);
		
		if (to > str.length) {
			result = result + Array(to - str.length + 1).join(" ");
		}
		
		return result;
	}}$;
}
