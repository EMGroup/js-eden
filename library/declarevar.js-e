## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

## this function declares a JScript as a JS-EDEN observable
## the context and which observable it connects to can be optionally specified
## if one string parameter is supplied this acts as the name of the JS-EDEN observable and the JScript variable
## if two string parameters are supplied they respectively supply the JScript and the observable JS-EDEN name 
## if two parameters are supplied, the first being a JScript object (not a string) they respectively supply
## the JScript context in which to put the variable and the JScript/JS-EDEN name 
## if three parameters are supplied, the first supplies the object/context, and the second and third
## respectively supply the JScript and the observable JS-EDEN name 

${{

declare_jse = function(p1, p2, p3) {
	var object = this;
	var nameJ = "";
	var nameJSE = "";
	if (typeof(p1) == "string") {
		if (p2 === undefined) {
			nameJ = p1;
			nameJSE = p1;
		} else {
			nameJ = p1;
			nameJSE = p2;
		} 
	} else {
		if (p3 === undefined) {
			object = p1;
                        nameJ = p2;
                        nameJSE = p2;
		} else {
			object = p1;
                        nameJ  = p2;
                        nameJSE = p3;
		}
	}

    object.__defineGetter__(nameJ, function(){
        return (root.lookup(nameJSE)).value();
    });
    
    object.__defineSetter__(nameJ, function(val){
        root.lookup(nameJSE).assign(val);
    });
}

}}$;


