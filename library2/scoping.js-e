/**
 * @title Scoping Prototypes
 * @author Nicolas Pope
 */

##typeof is ${{ scope.primaryCause() }}$;
from is ${{ scope.hasCause(context.lookup("name").value(scope)) }}$;
has is ${{ scope.hasOverride(context.lookup("name").value(scope)) }}$;
this is ${{ scope.baseCause() }}$;

##_override_item is value if i == index else list[i];
##override is _override_item with i = 1 .. list#;

##_sum is (list[i] + _sum with (i is i + 1)) if i <= list# else 0;
##sum is _sum with i is 1;

##round is ${{ Math.round(context.lookup("number").value(scope)) }}$;

Colour is "rgba("//str(r)//","//str(g)//","//str(b)//","//str(a)//")" ::
	r --> 0,
	g --> 0,
	b --> 0,
	a --> 1.0;

colour_white is Colour::(r->255,g->255,b->255);
colour_red is Colour::(r->255,g->0,b->0);
colour_green is Colour::(r->0,g->255,b->0);
Colours is this ::
	white -> colour_white,
	red -> colour_red,
	green -> colour_green;

##prototype_Point is [x,y];
point is [x,y] ::
	x --> 0,
	y --> 0;


