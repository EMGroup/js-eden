## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

${{
Arc = function(x, y, r, sAngle, eAngle, colour, drawingOptions) {
	this.x = x;
	this.y = y;
	this.r = r;
	this.sAngle = sAngle;
	this.eAngle = eAngle;
	this.colour = colour
	this.drawingOptions = drawingOptions;
}
}}$;

func Arc { ${{
	var x = arguments[0];
	var y = arguments[1];
	var r = arguments[2];
	var sAngle = arguments[3];
	var eAngle = arguments[4];
	var colour = arguments[5];
	var drawingOptions = arguments[6];
	if (colour === undefined) { colour = "black"; }
	return new Arc(x, y, r, sAngle, eAngle, colour, drawingOptions);
}}$; };

${{
Arc.prototype.draw = function(context) {
	var anticlockwise;
	if ("direction" in this.drawingOptions) {
		switch (this.drawingOptions.direction) {
		case "minor":
			anticlockwise = this.sAngle < this.eAngle;
			break;
		case "major":
			anticlockwise = this.sAngle > this.eAngle;
			break;
		case "clockwise":
			anticlockwise = false;
			break;
		default:
			anticlockwise = true;
		}
	} else {
		anticlockwise = this.sAngle < this.eAngle;
	}
	context.beginPath();
	context.arc(this.x, this.y, this.r, -this.sAngle, -this.eAngle, anticlockwise);
	context.strokeStyle = this.colour;
	context.stroke();
	context.closePath();
};

Arc.prototype.toString = function() {
	var s= "Arc(" +
		this.x + "," +
		this.y + "," +
		this.r + "," +
		this.sAngle + "," +
		this.eAngle + "," +
		this.colour;

	if (this.drawingOptions !== undefined) {
		s = s + ", " + root.lookup("edenCode").definition(root)(this.drawingOptions);
	}
	
	s = s + ")";
	return s;
}
}}$;
