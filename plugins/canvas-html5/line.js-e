## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

${{
Line = function(x1, y1, x2, y2, colours, drawingOptions) {
	this.x1 = x1;
	this.y1 = y1;
	this.x2 = x2;
	this.y2 = y2;
	this.colours = colours;
	this.drawingOptions = drawingOptions;
}
}}$;

func Line { ${{
	var x1 = arguments[0];
	var y1 = arguments[1];
	var x2 = arguments[2];
	var y2 = arguments[3];
	var colours = arguments[4];
	if (colours === undefined) {
		colours = ["black"];
	} else if (!Array.isArray(colours)) {
		colours = [colours];
	} else if (colours.length == 0) {
		colours = ["black"];
	}
	var drawingOptions = arguments[5];
	return new Line(x1, y1, x2, y2, colours, drawingOptions);
}}$; };

${{

Line.prototype.draw = function(context) {
	context.beginPath();
	if (this.colours.length == 1) {
		context.strokeStyle = this.colours[0];
	} else {
		var gradient = context.createLinearGradient(this.x1, this.y1, this.x2, this.y2);
		for (var i = 0; i < this.colours.length; i++) {
			gradient.addColorStop(i / (this.colours.length - 1), this.colours[i]);
		}
		context.strokeStyle = gradient;
	}
	context.moveTo(this.x1, this.y1);
	context.lineTo(this.x2, this.y2);
	context.stroke();
};

Line.prototype.toString = function() {
	var s = "Line(" + this.x1 + ", " + this.y1 + ", " + this.x2 + ", " + this.y2 +
		", " + Eden.edenCodeForValue(this.colours);
	
	if (this.drawingOptions !== undefined) {
		s = s + ", " + Eden.edenCodeForValue(this.drawingOptions);
	}
	
	s = s + ")";
	return s;
};

Line.prototype.getEdenCode = Line.prototype.toString;

}}$;
