## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

${{
Combobox = function (name, options, x, y, enabled) {
	this.name = name;
	this.options = options;
	this.x = x;
	this.y = y;
	this.enabled = enabled;
}

Combobox.prototype.hash = function () {
	return this.name+"$$"+
				this.options.join("$$")+
				this.x+"$$"+
				this.y+"$$"+
				this.enabled;
};

function makeoptionshtml(opts) {
	var html = "";
	for (x in opts) {
		html = html + "\n<option value=\""+ opts[x] + "\">"+ opts[x] + "</option>";
	}
	return html;
}
}}$;

func Combobox { ${{
  var name = arguments[0];
  var options = arguments[1];
  var x = arguments[2];
  var y = arguments[3];
  var enabled = arguments[4];
  return new Combobox(name, options, x, y, enabled);
}}$; }


${{
Combobox.prototype.draw = function(context,content) {
	var me = "canvas_" + this.name;
	var me2 = this.name;
	var valueName = this.name+'_value';
	var drawableName = this.name+'_drawable';
	var updateName = this.name+'_update';
	var drawingName = this.name+'_drawing';

	function updateVal(boxhtml) {
		boxhtml.val(root.lookup(valueName).value());
	}

	var box = this.element;
	var that = this;

	root.lookup(drawingName).assign(true);

	if (box === undefined) {
		var dis = "";
		if (this.enabled == true) { dis = ""; }
		else { dis = "disabled=\"true\""; }

		var can = $(content);
		var boxhtml = $("<select id=\"" + me + "\" " + dis + " style=\"position: absolute; left: " + this.x + "px; top: " + this.y + "px;\"></select>");

		boxhtml.html(makeoptionshtml(this.options));
		updateVal(boxhtml);

		boxhtml.change(function() {
			root.lookup(valueName).assign(boxhtml.get(0).value);
		});

		this.element = boxhtml.get(0);
		this.element.togarbage = false;

		root.lookup(drawableName).assign(this);
		if (root.lookup(valueName).value() === undefined) {
			root.lookup(valueName).assign(that.options[0]);
		}
		eden.execute('proc '+updateName+' : '+valueName+' { if ('+drawingName+') { return; } '+drawableName+'.draw(); }');
	} else {
		$(box).html(makeoptionshtml(this.options));
		box.togarbage = false;

		updateVal($(box));

		if (this.enabled == true) { 
			box.disabled = false; 
		}
		else { box.disabled = true; }

		box.style.left = "" + this.x + "px";
		box.style.top = "" + this.y + "px";
	}

	root.lookup(drawingName).assign(false);
};
}}$;
${{
Combobox.prototype.toString = function() {
	return "Combobox(" + this.name + ", " + this.options + ", " + this.x + ", "+this.y+", "+this.enabled+")";
};
}}$;
