## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

${{
Rectangle = function(x, y, width, height, fillcolour, outlinecolour, drawingOptions) {
  this.x = x;
  this.y = y;
  this.width = width;
  this.height = height;
  this.fillcolour = fillcolour;
  this.outlinecolour = outlinecolour;
  this.drawingOptions = drawingOptions;
}
}}$;

func Rectangle { ${{
	var x = arguments[0];
	var y = arguments[1];
	var width = arguments[2];
	var height = arguments[3];
	var fillcolour = arguments[4];
	var outlinecolour = arguments[5];
	if (fillcolour === undefined && outlinecolour === undefined) {
		outlinecolour = "black";
	}
	var drawingOptions = arguments[6];
	return new Rectangle(x, y, width, height, fillcolour, outlinecolour, drawingOptions);
}}$; };

${{
Rectangle.prototype.draw = function(context) {
	if (this.fillcolour !== undefined) {
		EdenUI.plugins.CanvasHTML5.setFillStyle(context, this.fillcolour);
		context.fillRect(this.x, this.y, this.width, this.height);
	}
	if (this.outlinecolour !== undefined) {
		context.strokeStyle = this.outlinecolour;
		context.strokeRect(this.x, this.y, this.width, this.height);
	}
};
}}$;

${{
Rectangle.prototype.toString = function() {
	var s = "Rectangle(" + this.x + ", " + this.y + ", " + this.width + ", " + this.height + ", ";

	if (this.fillcolour === undefined) {
		s = s + "@, ";
	} else {
		s = s + this.fillcolour + ", ";
	}
	if (this.outlinecolour === undefined) {
		s = s + "@, ";
	} else {
		s = s + this.outlinecolour + ", ";
	}
	
	if (this.drawingOptions !== undefined) {
		s = s + ", " + root.lookup("edenCode").definition(root)(this.drawingOptions);
	}
	
	s = s + ")";
	return s;
};
}}$;
