## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

##Taints the canvas if the file is located on another domain.

${{
CanvasImage = function (x, y, width, height, file) {
	this.x = x;
	this.y = y;
	this.width = width;
	this.height = height;
	this.image = new Image();
	
	this.canvasesToRepaint = {};
	this.loaded = false;
	
	var me = this;
	
	this.image.onload = function(){
		me.loaded = true;
		for (var canvas in me.canvasesToRepaint) {
			eden.execute("_update_" + canvas + "();");
		}
	}

	this.image.src = file;
}
}}$;

func Image { ${{
  var x = arguments[0];
  var y = arguments[1];
  var width, height, file;
  if (arguments.length == 3) {
	file = arguments[2];
  } else {
	width = arguments[2];
	height = arguments[3];
	file = arguments[4];
  }
  return new CanvasImage(x, y, width, height, file);
}}$; }

${{
CanvasImage.prototype.draw = function(context, content, canvas) {
	if(this.loaded){
		if (this.height === undefined) {
			context.drawImage(this.image, this.x, this.y);
		} else {
			context.drawImage(this.image, this.x, this.y, this.width, this.height);
		}
	} else {
		this.canvasesToRepaint[canvas] = true;
	}
};
}}$;

${{
CanvasImage.prototype.toString = function() {
  return "Image(" + this.x + ", " + this.y+ ", " + this.width + ", " + this.height + ", \"" + this.image.src + "\")";
};

CanvasImage.prototype.getEdenCode = CanvasImage.prototype.toString;

}}$;
