${{
Textbox = function (name, x, y, width, rows, enabled) {
	this.name = name;
	this.x = x;
	this.y = y;
	this.width = width;
	this.rows = rows;
    this.enabled = enabled;
}

Textbox.prototype.hash = function () {
	return this.name+"$$"+
				this.x+"$$"+
				this.y+"$$"+
				this.width+"$$"+
				this.rows+"$$"+
				this.enabled;
};
}}$;

func Textbox { ${{
  var name = arguments[0];
  var x = arguments[1];
  var y = arguments[2];
  var width = arguments[3];
  var rows = arguments[4];
  if (rows === undefined) rows = 1;
  var enabled = arguments[5];
  if (enabled === undefined) enabled = true;
  return new Textbox(name, x, y, width, rows, enabled);
}}$; }

${{
Textbox.prototype.draw = function(context) {
	var me = this;
	var name = this.name;
	var valueSymbol = root.lookup(name + "_value");
	var value = valueSymbol.value();
	var agent = root.lookup("Textbox");
	
	if(this.elements === undefined){

		var disabled = this.enabled === false? "readonly=\"readonly\"" : "";
		var jQuery;
		if (this.rows > 1) {
			jQuery = $("<textarea rows=\"" + this.rows + "\" " + disabled +
				" style=\"position: absolute; width:" + this.width + "px; left: " + this.x + "px; top: " + this.y + "px;\" />");		
		} else {
			jQuery = $("<input " + disabled +
				" style=\"position: absolute; width:" + this.width + "px; left: " + this.x + "px; top: " + this.y + "px;\" />");
		}
		var element = jQuery.get(0);
		
		if (value === undefined) {
			valueSymbol.assign("", agent);
		} else {
			element.value = value;
		}

		jQuery.change(function(event) {
			root.lookup(name + "_value").assign(event.target.value, agent, true);
		});
		this.elements = [element];

		valueSymbol.addJSObserver("updateTextbox", function (obs, value) {
			me.elements[0].value = value;
		});
  }
};
}}$;

${{
Textbox.prototype.toString = function() {
  return "Textbox(\"" + this.name + "\", " + this.x + ", " + this.y + ", " + this.width + ", " +
	this.rows + ", " + this.enabled + ")";
};

Textbox.prototype.getEdenCode = Textbox.prototype.toString;

}}$;
