## Copyright (c) 2013, Empirical Modelling Group
## All rights reserved.
##
## See LICENSE.txt

${{
Slider = function(name, min, max, step, value, orientation, x, y) {
  this.name = name;
  this.min = min;
  this.max = max;
  this.step = step;
  this.value = value;
  this.orientation = orientation;
  this.x = x;
  this.y = y;
}
}}$;

func Slider { ${{
  var name = arguments[0];
  var min = arguments[1];
  var max = arguments[2];
  var step = arguments[3];
  var value = arguments[4];
  var orientation = arguments[5];
  var x = arguments[6];
  var y = arguments[7];
  return new Slider(name, min, max, step, value, orientation, x, y);
}}$; }

${{
Slider.prototype.draw = function(context,content) {

  var me = "canvas_" + this.name;
  var me2 = this.name;
  var sli = this.element;

  if (sli === undefined) {
  
	if(this.orientation=="vertical"){
		var ori = "-webkit-appearance: slider-vertical;"
	}else{
		var ori = "";
	}
	
	var div = $('<div id="'+me+'-slider" style="position:absolute; top:'+this.y+'px; left:'+this.x+'px;">'+this.name+'</div>');
	
	var addinputtodiv = (($('<input id="'+me+'-slider-input" style="'+ori+'" value="'+this.value+'" type="range" name="'+this.name+'" min="'+this.min+'" max="'+this.max+'" step="'+this.step+'"/>')).on("change", function(){root.lookup(me2 + "_value").assign(parseInt(this.value))})).appendTo(div);
	
	var slihtml = $(div.appendTo($(content)));

	this.element = slihtml.get(0);
    slihtml.get(0).togarbage = false;

    //Assign obs value
    root.lookup(me2 + "_value").assign(this.value);
    root.lookup(me2 + "_x").assign(this.x);
    root.lookup(me2 + "_y").assign(this.y);
    root.lookup(me2 + "_min").assign(this.min);
    root.lookup(me2 + "_max").assign(this.max);
    root.lookup(me2 + "_step").assign(this.step);
	
  } else {
	//Draw with the values stored in the observables
	
    this.element.togarbage = false;
	//append
	content.appendChild(this.element);
  }

};
}}$;

${{
Slider.prototype.toString = function() {
  return "Slider("+this.name+", "+this.min+", "+this.max+", "+this.step+", "+this.default+", "+this.orientation+", "+this.x+", "+this.y+")";
};
}}$;
