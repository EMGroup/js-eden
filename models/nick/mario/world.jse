/**
 * @title Mario World
 * @author Nicolas Pope
 */

backgroundimg is Image(0,0,650,300,"models/nick/mario/background1.png");

tiles = [
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,160,161,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33],
[43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43],
[43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43],
[43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,43]
];

tiles_x = 10;
tiles_url = "models/nick/mario/tiles3.png";
tile_spacing = 1;
tile_width = 16;
tile_height = 16;
stage_left = -16;
stage_top = 0;

action buildTiles {
	build_tile_x = 1;
	build_tile_y = 1;
	tile_images = [];
	buildtiles = true;
}

when (tiles) do buildTiles;

action nextTile {
	buildtiles = false;
	if (build_tile_x == tiles[1]#) {
		build_tile_y++;
		build_tile_x = 0;
	} else {
		build_tile_x++;
	}
	if (build_tile_x <= tiles[1]# && build_tile_y <= tiles#) {
		buildtiles = true;
	}
}

when (buildtiles) {
	if (tiles[build_tile_y][build_tile_x] != 0) {
		tile_images = tile_images // tile_image;
	}
	do nextTile;
}

tile_x is tile_spacing + (tile_spacing + tile_width) * (tiles[build_tile_y][build_tile_x] % tiles_x);
tile_y is tile_spacing + ((tile_spacing + tile_height) * floor(tiles[build_tile_y][build_tile_x] / tiles_x));
tile_image is Image(build_tile_x*tile_width,build_tile_y*tile_height,
	tile_width, tile_height,
	tile_x, tile_y,
	tile_x + tile_width, tile_y + tile_height,
	tiles_url);

transformed_tiles is Translate(stage_left,stage_top,tile_images);

