proc mouseMove_s0: mousePressed {
if(((mouseX-ps0x)*(mouseX-ps0x)<100 )&&((mouseY-ps0y)*(mouseY-ps0y)<100))
{
	if(mousePressed)
	{
	  ps0x is mouseX;
	  ps0y is mouseY;
	}
    else{
      ps0x = mouseX;
      ps0y = mouseY;
    }
   }
}
proc mouseMove_s1: mousePressed {
if(((mouseX-ps1x)*(mouseX-ps1x)<100 )&&((mouseY-ps1y)*(mouseY-ps1y)<100))
{
	if(mousePressed)
	{
	  ps1x is mouseX;
	  ps1y is mouseY;
	}
    else{
      ps1x = mouseX;
      ps1y = mouseY;
    }
   }
}
proc mouseMove_s2: mousePressed {
if(((mouseX-ps2x)*(mouseX-ps2x)<100 )&&((mouseY-ps2y)*(mouseY-ps2y)<100))
{
	if(mousePressed)
	{
	  ps2x is mouseX;
	  ps2y is mouseY;
	}
    else{
      ps2x = mouseX;
      ps2y = mouseY;
    }
   }
}
proc mouseMove_s3: mousePressed {
if(((mouseX-ps3x)*(mouseX-ps3x)<100 )&&((mouseY-ps3y)*(mouseY-ps3y)<100))
{
	if(mousePressed)
	{
	  ps3x is mouseX;
	  ps3y is mouseY;
	}
    else{
      ps3x = mouseX;
      ps3y = mouseY;
    }
   }
}
proc mouseMove_s4: mousePressed {
if(((mouseX-ps4x)*(mouseX-ps4x)<100 )&&((mouseY-ps4y)*(mouseY-ps4y)<100))
{
	if(mousePressed)
	{
	  ps4x is mouseX;
	  ps4y is mouseY;
	}
    else{
      ps4x = mouseX;
      ps4y = mouseY;
    }
   }
}
proc mouseMove_s5: mousePressed {
if(((mouseX-ps5x)*(mouseX-ps5x)<100 )&&((mouseY-ps5y)*(mouseY-ps5y)<100))
{
	if(mousePressed)
	{
	  ps5x is mouseX;
	  ps5y is mouseY;
	}
    else{
      ps5x = mouseX;
      ps5y = mouseY;
    }
   }
}
proc mouseMove_s6: mousePressed {
if(((mouseX-ps6x)*(mouseX-ps6x)<100 )&&((mouseY-ps6y)*(mouseY-ps6y)<100))
{
	if(mousePressed)
	{
	  ps6x is mouseX;
	  ps6y is mouseY;
	}
    else{
      ps6x = mouseX;
      ps6y = mouseY;
    }
   }
}
proc mouseMove_s7: mousePressed {
if(((mouseX-ps7x)*(mouseX-ps7x)<100 )&&((mouseY-ps7y)*(mouseY-ps7y)<100))
{
	if(mousePressed)
	{
	  ps7x is mouseX;
	  ps7y is mouseY;
	}
    else{
      ps7x = mouseX;
      ps7y = mouseY;
    }
   }
}
proc mouseMove_s8: mousePressed {
if(((mouseX-ps8x)*(mouseX-ps8x)<100 )&&((mouseY-ps8y)*(mouseY-ps8y)<100))
{
	if(mousePressed)
	{
	  ps8x is mouseX;
	  ps8y is mouseY;
	}
    else{
      ps8x = mouseX;
      ps8y = mouseY;
    }
   }
}
proc mouseMove_s9: mousePressed {
if(((mouseX-ps9x)*(mouseX-ps9x)<100 )&&((mouseY-ps9y)*(mouseY-ps9y)<100))
{
	if(mousePressed)
	{
	  ps9x is mouseX;
	  ps9y is mouseY;
	}
    else{
      ps9x = mouseX;
      ps9y = mouseY;
    }
   }
}
proc mouseMove_s10: mousePressed {
if(((mouseX-ps10x)*(mouseX-ps10x)<100 )&&((mouseY-ps10y)*(mouseY-ps10y)<100))
{
	if(mousePressed)
	{
	  ps10x is mouseX;
	  ps10y is mouseY;
	}
    else{
      ps10x = mouseX;
      ps10y = mouseY;
    }
   }
}
proc mouseMove_s11: mousePressed {
if(((mouseX-ps11x)*(mouseX-ps11x)<100 )&&((mouseY-ps11y)*(mouseY-ps11y)<100))
{
	if(mousePressed)
	{
	  ps11x is mouseX;
	  ps11y is mouseY;
	}
    else{
      ps11x = mouseX;
      ps11y = mouseY;
    }
   }
}